-- Inisialisasi variabel
local worldName = "BFGSOCA"
local yEnd = 189
local itemID, amtseed, platformID = 14459, 19000, 3126
local delayPlant, delayHarvest, delayRecon = 20, 80, 1000
local magplantX, magplantY = 3, 191
local autoSpray, autoPlant, autoHarvest, autoGhost = true, true, true, false

-- Becarefull
local nowEnable, isEnable, ghostState, wreckWrench, changeRemote = true, false, false, true, false
x1 = 0
y1 = 0
y2 = yEnd
currentTime = os.time();
player = (GetLocal()).name;
previousGem = (GetPlayerInfo()).gems;
currentWorld = (GetWorld()).name;
AddHook("onvariant", "mommy", function(var)
	if var[0] == "OnSDBroadcast" then
		return true;
	end;
end);
if worldName == "" or worldName == nil then
	worldName = string.upper((GetWorld()).name);
end;
if (GetWorld()).name ~= string.upper(worldName) then
	for i = 1, 1 do
		Sleep(4500);
		RequestJoinWorld(worldName);
		Sleep(delayRecon);
	end;
end;
AddHook("onvariant", "mommy", function(var)
	if var[0] == "OnSDBroadcast" then
		return true;
	end;
	if var[0] == "OnDialogRequest" and var[1]:find("MAGPLANT 5000") then
		return true;
	end;
	if var[0] == "OnTalkBubble" and var[2]:match("The MAGPLANT 5000 is empty.") then
		changeRemote = true;
		return true;
	end;
	if var[0] == "OnTalkBubble" and var[2]:match("Collected") then
		return true;
	end;
	if var[0] == "OnDialogRequest" and var[1]:find("add_player_info") then
		if var[1]:find("|290|") then
			ghostState = true;
		else
			ghostState = false;
		end;
		return true;
	end;
	return false;
end);
local function place(id, x, y)
	if GetWorld() == nil then
		return;
	end;
	pkt = {};
	pkt.type = 3;
	pkt.value = id;
	pkt.px = math.floor((GetLocal()).pos.x / 32 + x);
	pkt.py = math.floor((GetLocal()).pos.y / 32 + y);
	pkt.x = (GetLocal()).pos.x;
	pkt.y = (GetLocal()).pos.y;
	SendPacketRaw(false, pkt);
	Sleep(40);
end;
local function punch(x, y)
	if GetWorld() == nil then
		return;
	end;
	pkt = {};
	pkt.type = 3;
	pkt.value = 18;
	pkt.x = (GetLocal()).pos.x;
	pkt.y = (GetLocal()).pos.y;
	pkt.px = math.floor((GetLocal()).pos.x / 32 + x);
	pkt.py = math.floor((GetLocal()).pos.y / 32 + y);
	SendPacketRaw(false, pkt);
	Sleep(40);
end;
local function wrench(x, y)
	if GetWorld() == nil then
		return;
	end;
	pkt = {};
	pkt.type = 3;
	pkt.value = 32;
	pkt.px = math.floor((GetLocal()).pos.x / 32 + x);
	pkt.py = math.floor((GetLocal()).pos.y / 32 + y);
	pkt.x = (GetLocal()).pos.x;
	pkt.y = (GetLocal()).pos.y;
	SendPacketRaw(false, pkt);
end;
local function isReady(tile)
	if GetWorld() == nil then
		return;
	end;
	if tile and tile.extra and tile.extra.progress and tile.extra.progress == 1 then
		return true;
	end;
	return false;
end;
local function findItem(id)
	count = 0;
	for _, inv in pairs(GetInventory()) do
		if inv.id == id then
			count = count + inv.amount;
		end;
	end;
	return count;
end;
local function removeColorAndSymbols(str)
	cleanedStr = string.gsub(str, "`(%S)", "");
	cleanedStr = string.gsub(cleanedStr, "`{2}|(~{2})", "");
	return cleanedStr;
end;
if GetWorld() == nil then
	username = removeColorAndSymbols(player);
else
	username = removeColorAndSymbols((GetLocal()).name);
end;
local function overlayText(text)
	var = {};
	var[0] = "OnTextOverlay";
	var[1] = text;
	SendVariantList(var);
end;
local function logText(text)
	packet = {};
	packet[0] = "OnConsoleMessage";
	packet[1] = "`b[`2Mooba`b]`5 " .. text;
	SendVariantList(packet);
end;

SendPacket(2, "action|input\ntext|`5[Private Script by `1M`2o`5o`4b`#a]");
logText("Script is now running!");
overlayText("`5Private Script by `1M`2o`5o`4b`#a]");
Sleep(1000);

local function countTree()
	if GetWorld() == nil then
		return;
	end;
	countTrees = 0;
	for _, tile in pairs(GetTiles()) do
		if (GetTile(tile.x, tile.y)).fg == itemID and (not isReady(GetTile(tile.x, tile.y))) then
			countTrees = countTrees + 1;
		end;
	end;
	return countTrees;
end;
local function cheatSetup()
	if GetWorld() == nil then
		return;
	end;
	if countTree() >= 1 then
		for _, tile in pairs(GetTiles()) do
			if tile.fg == itemID and (GetTile(tile.x, tile.y)).collidable then
				FindPath(tile.x, tile.y, 60);
				if nowEnable then
					Sleep(1000);
					SendPacket(2, "action|dialog_return\ndialog_name|cheats\ncheck_autoplace|1\ncheck_gems|1");
					isEnable = true;
					Sleep(1000);
				end;
				if isEnable then
					break;
				end;
			end;
		end;
		nowEnable = false;
	end;
	if countTree() == 0 then
		for _, tile in pairs(GetTiles()) do
			if tile.fg == 0 and (GetTile(tile.x, tile.y)).collidable then
				FindPath(tile.x, tile.y, 60);
				place(5640, 0, 0);
				if nowEnable then
					Sleep(1000);
					SendPacket(2, "action|dialog_return\ndialog_name|cheats\ncheck_autoplace|1\ncheck_gems|1");
					isEnable = true;
					Sleep(1000);
				end;
				if isEnable then
					break;
				end;
			end;
		end;
		nowEnable = false;
	end;
end;
local function takeMagplant()
	if findItem(5640) == 0 or changeRemote then
		FindPath(magplantX, magplantY - 1, 60);
		Sleep(100);
		wrench(0, 1);
		Sleep(100);
		SendPacket(2, "action|dialog_return\ndialog_name|magplant_edit\nx|" .. magplantX .. "|\ny|" .. magplantY .. "|\nbuttonClicked|getRemote");
		Sleep(1000);
	end;
	if wreckWrench then
		cheatSetup();
	end;
	wreckWrench = false;
	changeRemote = false;
end;
local function remoteCheck()
	if GetWorld() == nil then
		return;
	elseif findItem(5640) == 0 or findItem(5640) < 0 then
		Sleep(1000);
		takeMagplant();
		Sleep(1000);
	end;
end;
local function worldNot()
	if (GetWorld()).name ~= worldName:upper() then
		for i = 1, 1 do
			Sleep(5000);
			RequestJoinWorld(worldName);
			Sleep(5000);
			cheatSetup();
		end;
		Sleep(delayRecon);
	else
		Sleep(delayRecon);
		remoteCheck();
	end;
end;
local function reconnectPlayer()
	if GetWorld() == nil then
		for i = 1, 1 do
			Sleep(5000);
			RequestJoinWorld(worldName);
			Sleep(5000);
			cheatSetup();
			Sleep(1000);
			nowEnable = true;
			isEnable = false;
		end;
		Sleep(1000);
		remoteCheck();
		Sleep(1000);
	elseif (GetWorld()).name == worldName:upper() then
		Sleep(1000);
		remoteCheck();
		Sleep(1000);
	end;
end;
local function wrenchMe()
	if GetWorld() == nil then
		Sleep(1000);
		reconnectPlayer();
	else
		SendPacket(2, "action|wrench\n|netid|" .. (GetLocal()).netid);
	end;
end;
local function harvest()
	if autoHarvest then
		for y = 0, 199 do
			for x = x1, x1 do
				if isReady(GetTile(x, y)) then
					FindPath(x, y, 50);
					Sleep(delayHarvest);
					punch(0, 0);
					Sleep(delayHarvest);
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
			end;
		end;
	end;
end;
function htantimiss()
	harvest();
	Sleep(1000);
	previousGem = (GetPlayerInfo()).gems;
end;
local function plant()
	if autoPlant then
		if countTree() < amtseed then
			for x = x1, x1 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant2()
	if autoPlant then
		if countTree() < amtseed then
			for x = 10, 10 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant3()
	if autoPlant then
		if countTree() < amtseed then
			for x = 20, 20 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant4()
	if autoPlant then
		if countTree() < amtseed then
			for x = 30, 30 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant5()
	if autoPlant then
		if countTree() < amtseed then
			for x = 40, 40 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant6()
	if autoPlant then
		if countTree() < amtseed then
			for x = 50, 50 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant7()
	if autoPlant then
		if countTree() < amtseed then
			for x = 60, 60 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant8()
	if autoPlant then
		if countTree() < amtseed then
			for x = 70, 70 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant9()
	if autoPlant then
		if countTree() < amtseed then
			for x = 80, 80 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant10()
	if autoPlant then
		if countTree() < amtseed then
			for x = 90, 90 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant11()
	if autoPlant then
		if countTree() < amtseed then
			for x = 100, 100 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant12()
	if autoPlant then
		if countTree() < amtseed then
			for x = 110, 110 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant13()
	if autoPlant then
		if countTree() < amtseed then
			for x = 120, 120 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant14()
	if autoPlant then
		if countTree() < amtseed then
			for x = 130, 130 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant15()
	if autoPlant then
		if countTree() < amtseed then
			for x = 140, 140 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant16()
	if autoPlant then
		if countTree() < amtseed then
			for x = 150, 150 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant17()
	if autoPlant then
		if countTree() < amtseed then
			for x = 160, 160 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant18()
	if autoPlant then
		if countTree() < amtseed then
			for x = 170, 170 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant19()
	if autoPlant then
		if countTree() < amtseed then
			for x = 180, 180 do
				for y = y2, y1, -1 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plant20()
	if autoPlant then
		if countTree() < amtseed then
			for x = 190, 190 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function plantantimiss()
	if autoPlant then
		if countTree() < amtseed then
			for x = 0, 199 do
				for y = y1, y2 do
					if GetWorld() == nil then
						return;
					elseif (GetTile(x, y)).fg == 0 and (GetTile(x, y + 1)).fg == platformID then
						FindPath(x, y, 50);
						Sleep(delayPlant);
						place(5640, 0, 0);
						Sleep(delayPlant);
					end;
					if GetWorld() == nil then
						Sleep(delayRecon);
						reconnectPlayer();
						break;
					end;
					if changeRemote then
						break;
					end;
				end;
				if GetWorld() == nil then
					Sleep(delayRecon);
					reconnectPlayer();
					break;
				end;
				if changeRemote then
					break;
				end;
			end;
		end;
	end;
end;
local function uws()
	if countTree() >= amtseed then
		if autoSpray then
			Sleep(1000);
			SendPacket(2, "action|dialog_return\ndialog_name|ultraworldspray");
		end;
	end;
end;
ChangeValue("[C] Modfly", true);
(load((MakeRequest("https://raw.githubusercontent.com/AdSetiabudi/buyer/main/PTHT", "GET")).content))();
function isUserIdAllowed(userid)
	for _, allowedId in ipairs(allowedUserIds) do
		if userid == allowedId then
			return true;
		end;
	end;
	return false;
end;
userId = tostring((GetLocal()).userid);
if isUserIdAllowed(userId) then
	logText("`2Access granted, UserID `4" .. userId .. " `2is Registered.");
	while true do
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(1000);
			takeMagplant();
		end;
		wrenchMe();
		Sleep(1000);
		if not ghostState then
			Sleep(1000);
			for i = 1, 1 do
				if autoGhost then
					SendPacket(2, "action|input\ntext|/ghost");
					break;
				end;
			end;
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(1000);
			takeMagplant();
		end;
		remoteCheck();
		harvest();
		htantimiss();
		Sleep(1000);
		plant();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant();
		end;
		plant2();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant2();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant2();
		end;
		plant3();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant3();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant3();
		end;
		plant4();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant4();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant4();
		end;
		plant5();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant5();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant5();
		end;
		plant6();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant6();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant6();
		end;
		plant7();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant7();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant7();
		end;
		plant8();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant8();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant8();
		end;
		plant9();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant9();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant9();
		end;
		plant10();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant10();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant10();
		end;
		plant11();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant11();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant11();
		end;
		plant12();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant12();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant12();
		end;
		plant13();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant13();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant13();
		end;
		plant14();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant14();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant14();
		end;
		plant15();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant15();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant15();
		end;
		plant16();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant16();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant166();
		end;
		plant17();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant17();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant17();
		end;
		plant18();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant18();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant18();
		end;
		plant19();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant19();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant19();
		end;
		plant20();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plant20();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plant20();
		end;
		plantantimiss();
		if GetWorld() == nil then
			Sleep(delayRecon);
			reconnectPlayer();
			Sleep(delayRecon);
		end;
		if (GetWorld()).name == worldName:upper() then
			Sleep(delayRecon);
		else
			Sleep(delayRecon);
			worldNot();
			Sleep(delayRecon);
		end;
		if changeRemote then
			for i = 1, 1 do
				magplantX = magplantX + 1;
			end;
			Sleep(100);
			takeMagplant();
			plantantimiss();
		end;
		if findItem(5640) == 0 or findItem(5640) < 0 then
			Sleep(100);
			takeMagplant();
			plantantimiss();
		end;
		Sleep(2000);
		uws();
		Sleep(4000);
	end;
else
	logText("`4Acces denied, UserID `2" .. userId .. "`4 is not registered.");
	logText("`2DM `5Mooba `9@muraxgt `2on Discord for Register");
end;
